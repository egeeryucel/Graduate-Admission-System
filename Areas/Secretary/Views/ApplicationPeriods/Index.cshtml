@model IEnumerable<GraduationAdmissionSystem.Models.ApplicationPeriod>
@using GraduationAdmissionSystem.Models

@{
    ViewData["Title"] = "Manage Application Periods";
}

<div class="container mt-4">
    <h1>@ViewData["Title"]</h1>

    <p>
        <a asp-action="Create" class="btn btn-primary"><i class="fas fa-plus-circle me-2"></i>Create New Period</a>
    </p>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <table class="table table-striped table-hover">
        <thead class="table-light">
            <tr>
                <th>@Html.DisplayNameFor(model => model.Name)</th>
                <th>@Html.DisplayNameFor(model => model.Semester)</th>
                <th>@Html.DisplayNameFor(model => model.Year)</th>
                <th>@Html.DisplayNameFor(model => model.StartDate)</th>
                <th>@Html.DisplayNameFor(model => model.EndDate)</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (!Model.Any())
            {
                <tr>
                    <td colspan="7" class="text-center">No application periods found. Create one to get started.</td>
                </tr>
            }
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Semester)</td>
                    <td>@Html.DisplayFor(modelItem => item.Year)</td>
                    <td>@item.StartDate.ToString("yyyy-MM-dd")</td>
                    <td>@item.EndDate.ToString("yyyy-MM-dd")</td>
                    <td>
                        @if (item.IsOpen)
                        {
                            <span class="badge bg-success">Open</span>
                        }
                        else
                        {
                            <span class="badge bg-danger">Closed</span>
                        }
                    </td>
                    <td>
                        <div class="btn-group" role="group">
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-info btn-sm me-1"><i class="fas fa-edit"></i> Edit</a>
                            <form asp-action="ToggleStatus" asp-route-id="@item.Id" method="post" class="d-inline">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-@(item.IsOpen ? "warning" : "success") btn-sm me-1">
                                    <i class="fas fa-@(item.IsOpen ? "lock" : "lock-open")"></i> @(item.IsOpen ? "Close" : "Open") Period
                                </button>
                            </form>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm"><i class="fas fa-trash-alt"></i> Delete</a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div> 